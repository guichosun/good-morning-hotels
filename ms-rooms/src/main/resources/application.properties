spring.application.name=ms-rooms

# El profile activo en este micro
spring.profiles.active=dev
#spring.profiles.active=qa
#spring.profiles.active=perf
#spring.profiles.active=prod

# Con esto le decimos a spring que genere de manera automatica el port
server.port=${PORT:0}
# Sin API Gateway
#server.port=8006
# El puerto es 8080 por que ya esta dockerizado
#server.port=8080

# ......... Configuracion para el Config server
# La ruta donde se encuentra el servidor de configuraciones.
# Por el momento, el servidor de configuraciones no estara en docker
spring.cloud.config.uri=http://localhost:8888
#Una vez que ya este Dockenizado el server config, cambiar aqui
#spring.cloud.config.uri=http://server-config:8888

# ......... Configuracion para Eureka server
# Se configura el id de la instancia en eureka, esto porque estamos dejando el num del port que lo haga spring
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}


# Se indica la url del servidor de eureka, esto para cuando el servidor esta en otra ruta
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
# Se indica la url del servidor de eureka, esto para cuando el servidor esta en docker
#eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka



spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=rooms-buenasnoches

#Es temporal
spring.cloud.config.enabled=false




# Esto para el servidor de aplicaciones
#spring.config.import=optional:configserver: